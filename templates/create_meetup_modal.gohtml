{{ define "create_meetup_modal" }}
<!-- Trigger Button -->
<button class="register_link" onclick="openModal()">Create Meetup</button>

<!-- Modal Overlay -->
<div id="createMeetupModal" class="modal-overlay">
	<div class="modal-content">
		<h3>Create a New Meetup</h3>
		<form class="formStyles" onsubmit="createMeetup(event)">
			<label for="name" class="required">Name:</label>
			<input type="text" id="name" required />

			<label class="required" for="description">Description:</label>
			<textarea style='font-size: 1.3em;' rows="10" id="description" required></textarea>

			<div class="modal-actions">
				<button style="font-size: 14px" type="submit">Submit</button>
				<button style="font-size: 14px" type="button" onclick="closeModal()">
					Cancel
				</button>
			</div>
		</form>
	</div>
</div>

<style>
	/* Overlay */
	.modal-overlay {
		display: none;
		position: fixed;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background: rgba(0, 0, 0, 0.5);
		z-index: 1000;
		justify-content: center;
		align-items: center;
	}

	/* Modal Box */
	.modal-content {
		background: white;
		padding: 1.5em;
		border-radius: 8px;
		width: 90%;
		max-width: 400px;
		box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
	}

	.modal-content input,
	.modal-content textarea {
		width: 100%;
		margin-bottom: 1em;
		padding: 0.5em;
		border: 1px solid #ccc;
		border-radius: 4px;
		font-size: 1em;
	}

	.modal-actions {
		display: flex;
		justify-content: flex-end;
		gap: 0.5em;
	}

	label.required::after {
		content: ' *';
		color: red;
	}

	.formStyles {
		display: flex;
		flex-direction: column;
		padding-right: 1em;
	}

	@media (max-width: 480px) {
		.modal-content {
			width: 95%;
			padding: 1em;
		}
	}
</style>

<script>
	function openModal() {
		document.getElementById('createMeetupModal').style.display = 'flex';
	}

	function closeModal() {
		document.getElementById('createMeetupModal').style.display = 'none';
	}

	async function createMeetup(e) {
		e.preventDefault();

		const name = document.getElementById('name').value;
		const description = document.getElementById('description').value;

		const query = `
			mutation CreateMeetup($input: NewMeetup!) {
				createMeetup(input: $input) {
					id
					name
					description
				}
			}
		`;

		const variables = {
			input: { name, description },
		};

		const response = await fetch('/query', {
			method: 'POST',
			headers: { 'Content-Type': 'application/json' },
			credentials: 'include', // include auth user
			body: JSON.stringify({ query, variables }),
		});

		const result = await response.json();
		if (result.data && result.data.createMeetup) {
			alert('Meetup created!');
			closeModal();
			location.reload();
		} else {
			alert('Error: ' + (result.errors?.[0]?.message || 'unknown'));
		}
	}
</script>
{{ end }}
