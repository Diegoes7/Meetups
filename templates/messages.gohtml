{{ define "messages" }}
<section>
	<h3 class="underline">Messages:</h3>
	<div class="message-container">
		<textarea
			cols="7"
			rows="4"
			type="text"
			id="message-input"
			placeholder="Type a message..."
		></textarea>
		<div style="display: flex; justify-content: flex-end">
			<button id="send_button">Send</button>
		</div>
	</div>
	<ul id="message-list">
		{{
			range.Messages
		}}
		<li>
			<strong>{{ .User.Username }}:</strong> {{ .Content }}
		</li>
		{{
			end
		}}
	</ul>
</section>
<script>
	// const meetupID = '{{ .MeetupID }}'; // inject from template context

	// async function fetchMessages() {
	// 	const query = `
	// 		query GetMessages($meetupID: String!) {
	// 			getMessagesByMeetup(meetupID: $meetupID) {
	// 				id
	// 				content
	// 				user {
	// 					username
	// 				}
	// 			}
	// 		}
	// 	`;

	// 	const res = await fetch('/query', {
	// 		method: 'POST',
	// 		headers: { 'Content-Type': 'application/json' },
	// 		body: JSON.stringify({ query, variables: { meetupID } }),
	// 	});

	// 	const result = await res.json();
	// 	const messages = result.data?.getMessagesByMeetup || [];
	// 	const list = document.getElementById('message-list');
	// 	list.innerHTML = '';
	// 	messages.forEach((m) => {
	// 		const li = document.createElement('li');
	// 		li.innerHTML = `<strong>${m.user.username}:</strong> ${m.content}`;
	// 		list.appendChild(li);
	// 	});
	// }

	// let socket;

	// document.addEventListener('DOMContentLoaded', () => {
	// 	socket = new WebSocket('ws://localhost:8080/ws'); // adjust to your WS endpoint
	// 	document
	// 		.getElementById('send_button')
	// 		.addEventListener('click', sendMessage);
	// });

	// async function sendMessageToServer(message) {
	// 	const mutation = `
	// 		mutation SendMessage($input: NewMessageInput!) {
	// 			sendMessage(input: $input) {
	// 				id
	// 				content
	// 				user {
	// 					username
	// 				}
	// 			}
	// 		}
	// 	`;

	// 	const variables = {
	// 		input: {
	// 			content: message,
	// 			meetupID: '{{ .Meetup.ID }}',
	// 		},
	// 	};

	// 	const res = await fetch('/query', {
	// 		method: 'POST',
	// 		headers: { 'Content-Type': 'application/json' },
	// 		body: JSON.stringify({ query: mutation, variables }),
	// 	});

	// 	const result = await res.json();
	// 	if (result.errors) {
	// 		alert('Failed to send message: ' + result.errors[0].message);
	// 		console.error(result.errors);
	// 		return false;
	// 	}

	// 	return result.data.sendMessage;
	// }

	// function sendMessageToSocket(message) {
	// 	if (socket && socket.readyState === WebSocket.OPEN) {
	// 		socket.send(
	// 			JSON.stringify({
	// 				meetupId: '{{ .Meetup.ID }}',
	// 				message: message,
	// 			})
	// 		);
	// 		return true;
	// 	} else {
	// 		console.warn('WebSocket is not connected.');
	// 		return false;
	// 	}
	// }

	// async function sendMessage() {
	// 	const input = document.getElementById('message-input');
	// 	const message = input.value.trim();
	// 	if (!message) return;

	// 	// Call GraphQL mutation
	// 	const savedMessage = await sendMessageToServer(message);
	// 	if (!savedMessage) return;

	// 	// Send to WebSocket
	// 	sendMessageToSocket(message);

	// 	// Update the UI
	// 	const messageList = document.getElementById('message-list');
	// 	const li = document.createElement('li');
	// 	li.innerHTML = `<strong>You:</strong> ${message}`;
	// 	messageList.appendChild(li);
	// 	input.value = '';
	// }

	// async function sendMessage() {
	// 	const input = document.getElementById('message-input');
	// 	const content = input.value.trim();
	// 	if (!content) return;

	// 	const mutation = `
	// 		mutation SendMessage($input: NewMessageInput!) {
	// 			sendMessage(input: $input) {
	// 				id
	// 				content
	// 				user {
	// 					username
	// 				}
	// 			}
	// 		}
	// 	`;

	// 	const variables = {
	// 		input: {
	// 			content,
	// 			meetupID,
	// 		},
	// 	};

	// 	const res = await fetch('/query', {
	// 		method: 'POST',
	// 		headers: { 'Content-Type': 'application/json' },
	// 		body: JSON.stringify({ query: mutation, variables }),
	// 	});

	// 	const result = await res.json();
	// 	if (result.errors) {
	// 		alert('Failed to send message: ' + result.errors[0].message);
	// 		return;
	// 	}

	// 	input.value = '';
	// 	await fetchMessages();
	// }

	// document.addEventListener('DOMContentLoaded', () => {
	// 	document
	// 		.getElementById('send-button')
	// 		.addEventListener('click', sendMessage);
	// });
</script>
{{ end }}
